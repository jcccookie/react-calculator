{"version":3,"sources":["components/Calculator/Display/Display.js","components/Calculator/Keypad/Key.js","components/Calculator/Keypad/Keypad.js","components/Calculator/Calculator.js","App.js","index.js"],"names":["Display","props","react_default","a","createElement","className","displayValue","Key","onClick","value","Keypad","_this","this","isDisplayZero","Keypad_Key","onClearAll","onClear","onHandleSign","onHandlePercentage","onHandleDigit","onHandleDot","onPerformOperation","React","Component","Operations","+","prevValue","nextValue","-","*","/","=","Calculator","state","operator","waitingOperand","setState","onDelete","prevState","substring","length","digit","_this$state","String","match","result","parseInt","inputOperator","_this$state2","inputValue","parseFloat","onHandleKeydown","e","key","test","document","addEventListener","removeEventListener","Calculator_Display_Display","Calculator_Keypad_Keypad","App","components_Calculator_Calculator","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.d166300a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Display = (props) => (\n   <div className='display'>\n      <div className='display__value'>\n         {props.displayValue}\n      </div>\n   </div>\n)\n\nexport default Display;","import React from 'react';\n\nconst Key = (props) => (\n   <button onClick={props.onClick} className={props.className}>\n      {props.value}\n   </button>\n);\n\nexport default Key;","import React from 'react';\nimport Key from './Key';\n\nclass Keypad extends React.Component {\n   \n   render() {\n      const isDisplayZero = this.props.displayValue === '0';\n\n      return (\n         <div className='keypad'>\n            <div className='input-keys'>\n               <div className='function-keys'>\n                  <Key \n                     value={isDisplayZero ? 'AC' : 'C'}   className='key'\n                     onClick={() => \n                        isDisplayZero ? this.props.onClearAll() : this.props.onClear()   \n                     }\n                  />\n                  <Key \n                     value={'±'} className='key'\n                     onClick={() => this.props.onHandleSign()}\n                  />\n                  <Key \n                     value={'%'} className='key'\n                     onClick={() => this.props.onHandlePercentage()}\n                  />\n               </div>\n               <div className='digit-keys'>\n                  <Key value={'0'} className='key key-0' onClick={() => this.props.onHandleDigit(0)}/>\n                  <Key value={'.'} className='key' onClick={() => this.props.onHandleDot()}/>\n                  <Key value={'1'} className='key' onClick={() => this.props.onHandleDigit(1)}/>\n                  <Key value={'2'} className='key' onClick={() => this.props.onHandleDigit(2)}/>\n                  <Key value={'3'} className='key' onClick={() => this.props.onHandleDigit(3)}/>\n                  <Key value={'4'} className='key' onClick={() => this.props.onHandleDigit(4)}/>\n                  <Key value={'5'} className='key' onClick={() => this.props.onHandleDigit(5)}/>\n                  <Key value={'6'} className='key' onClick={() => this.props.onHandleDigit(6)}/>\n                  <Key value={'7'} className='key' onClick={() => this.props.onHandleDigit(7)}/>\n                  <Key value={'8'} className='key' onClick={() => this.props.onHandleDigit(8)}/>\n                  <Key value={'9'} className='key' onClick={() => this.props.onHandleDigit(9)}/>\n               </div>\n            </div>\n            <div className='operator-keys'>\n               <Key value={'÷'} className='key' onClick={() => this.props.onPerformOperation('/')}/>\n               <Key value={'x'} className='key' onClick={() => this.props.onPerformOperation('*')}/>\n               <Key value={'-'} className='key' onClick={() => this.props.onPerformOperation('-')}/>\n               <Key value={'+'} className='key' onClick={() => this.props.onPerformOperation('+')}/>\n               <Key value={'='} className='key' onClick={() => this.props.onPerformOperation('=')}/>\n            </div>\n         </div>\n      )\n   }\n   \n}\n\nexport default Keypad;","import React from 'react';\nimport Display from './Display/Display';\nimport Keypad from './Keypad/Keypad';\n\nconst Operations = {\n   '+': (prevValue, nextValue) => prevValue + nextValue,\n   '-': (prevValue, nextValue) => prevValue - nextValue,\n   '*': (prevValue, nextValue) => prevValue * nextValue,\n   '/': (prevValue, nextValue) => prevValue / nextValue,\n   '=': (prevValue, nextValue) => nextValue\n}\n\nclass Calculator extends React.Component {\n   state = {\n      displayValue: '0',\n      value: 0,\n      operator: '',\n      waitingOperand: false\n   }\n\n   onClearAll = () => {\n      this.setState(() => ({\n         displayValue: '0',\n         value: 0,\n         operator: '',\n         waitingOperand: false\n      }));\n   }\n\n   onClear = () => {\n      this.setState(() => ({ displayValue: '0' }));\n   }\n\n   onDelete = () => {\n      this.setState((prevState) => ({ \n         displayValue: prevState.displayValue.substring(0, prevState.displayValue.length - 1) || '0'\n      }))\n   }\n\n   onHandleDigit = (digit) => {\n      let { displayValue, waitingOperand } = this.state;\n\n      if (displayValue.length >= 10) {\n         displayValue = displayValue.substring(0, 10);\n      }\n\n      if (waitingOperand) {\n         this.setState(() => ({ displayValue: String(digit), waitingOperand: false }));\n      } else {\n         //Empty display value\n         if (displayValue === '0') {\n            this.setState(() => ({ displayValue: String(digit) }));\n         } else {\n            this.setState(() => ({\n               displayValue: displayValue + digit,\n               waitingOperand: false\n            }))\n         }\n      }\n   }\n\n   onHandleDot = () => {\n      const { displayValue } = this.state;\n      //regex to prevent more than one dot\n      const regex = /\\./;\n      const result = displayValue.match(regex);\n\n      if (!result) {\n         this.setState((prevState) => ({\n            displayValue: prevState.displayValue + '.'\n         }))\n      }\n   }\n\n   onHandleSign = () => {\n      const { displayValue } = this.state;\n      const intValue = parseInt(displayValue, 10);\n      const result = intValue * -1;\n\n      this.setState(() => ({\n         displayValue: String(result)\n      }))\n   }\n\n   onHandlePercentage = () => {\n      const { displayValue } = this.state;\n      const result = parseInt(displayValue, 10) / 100;\n\n      this.setState(() => ({\n         displayValue: String(result)\n      }))\n   }\n\n   onPerformOperation = (inputOperator) => {\n      const { displayValue, value, operator } = this.state;\n      const inputValue = parseFloat(displayValue);\n\n      if (inputOperator !== '=') {\n         this.setState(() => ({\n            value: inputValue\n         }))\n      } else if (operator !== '=') {\n         const result = Operations[operator](value, inputValue);\n         this.setState(() => ({\n            value: result,\n            displayValue: String(result)\n         }))\n      } \n\n      this.setState(() => ({\n          operator: inputOperator,\n          waitingOperand: true\n      }))\n   }\n\n   //Handle key pressings\n   onHandleKeydown = (e) => {\n      let { key } = e;\n\n      if (key === 'Enter') {\n         key = '=';\n      }\n\n      if ((/\\d/).test(key)) {\n         this.onHandleDigit(parseInt(key));\n      } else if (key in Operations) {\n         this.onPerformOperation(key);\n      } else if (key === '.') {\n         this.onHandleDot();\n      } else if (key === 'Backspace') {\n         this.onDelete();\n      } else if (key === '%') {\n         this.onHandlePercentage();\n      } else if (key === 'Escape') {\n         this.state.displayValue === '0' ? this.onClearAll() : this.onClear()\n      }\n      \n   }\n\n   componentDidMount() {\n      document.addEventListener('keydown', this.onHandleKeydown);\n   }\n\n   componentWillUnmount() {\n      document.removeEventListener('keydown', this.onHandleKeydown);\n   }\n\n   render() {\n      return (\n         <div className='calculator'>\n            <Display displayValue={this.state.displayValue} />\n            <Keypad\n               displayValue={this.state.displayValue}\n               onHandleDigit={this.onHandleDigit}\n               onHandleDot={this.onHandleDot}\n               onHandleSign={this.onHandleSign}\n               onHandlePercentage={this.onHandlePercentage}\n               onPerformOperation={this.onPerformOperation}\n               onClearAll={this.onClearAll}\n               onClear={this.onClear}\n            />\n         </div>\n      )\n   }\n}\n\nexport default Calculator;","import React from 'react';\nimport Calculator from './components/Calculator/Calculator';\n\nconst App = () => (\n  <div className=\"App\">\n    <Calculator />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}